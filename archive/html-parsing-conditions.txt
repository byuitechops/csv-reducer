/**************************************************************
 * Project Questions and Comments:
 * 1. Everywhere on the document 'definition' is spelled 'defanintion'
 *    I assume that the correct spelling should be used on things such
 *    as class tags, etc. Is this correct?
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
***************************************************************/

/**************************************************************
 * Green Box: Adding Class Definitions and Examples
***************************************************************/
if somewhere after `<h2>Warm-up</h2>` 
there is `<p><strong>`
    Then For Every Occurrance...
edit `<p>` to  = `<p class="vocab definition">` // `class = "vocab definition"` or `class = "vocab-definition"` ?
    Unless...
The word "example" is present before the `</p>`
    Or...
There is an `<em>` between `<p>` and `</p>`
    But...
If there is an `<em>` between `<p>` and `</p>`
    Then...
edit `<p>` to = `<p class="vocab example">`
/**************************************************************
 * Footer Notes: 
 * 1. It seems that all "example" <p><strong> combinations have the 
 *    <em> tags, and vice-versa.
***************************************************************/

/**************************************************************
 * Green Box: Passage Content to Delete
***************************************************************/
Delete:
    Everything between
        `<h1>Instructions</h1>`
    and
        `<h2>Warm-up</h2>`
    including `<h1>Instructions</h1>`
Also Delete:
    Everything between
        `<h2>Warm-up</h2>`
    and
        the first `<p><strong>` combination
    including `<h2>Warm-up</h2>`
But...
    Stop if `<h2>Passage</h2>` is found.
/**************************************************************
 * Footer Notes: 
 * 1. Each of the following tags seems to follow these capitalization 
 *    and spaces ruling, but I wouldn't count on it reliably:
 *      <h1>Instructions</h1>
 *      <h2>Warm-up</h2>
 *      <h2>Passage</h2>
 * 2. This content is contained in the "passagetext" header.
 * 3. /<h1>Instructions<\/h1>[\S\s]*?(<h2>Warm-up<\/h2>)/i
 *    above is the regex line for removing everything between <h1> and <h2>
 * 4. /<h2>Warm-up<\/h2>[\S\s]*?(<p><strong>|<h2>Passage<\/h2>)/i
 *    ^^ Regex for part 2
 * >> NOTE: is the first <p><strong> combot the real first place we want to stop?
 *          it looks like it holds some content that may be wanted later.
***************************************************************/

/**************************************************************
 * Green Box: Add Divs
***************************************************************/
Add
    `<div class="definitions-container"> ... </div>`, where '...' 
    is the definitions section of the HTML contained in the csv.
    --> See footer notes for details.
Add
    `<div class="passage-container"> ... </div>`, where '...'
    is the definitions section of the HTML contained in the csv.
    --> See footer notes for details.
/**************************************************************
 * Footer Notes: 
 * 1. None of the four testing documents we've been given contain 
 *    an `<h2>Definitiins</h2>` tag. 
 * 2. Are we gaurenteed to reach an `<h2>Passage</h2>` container to
 *    mark the end of the area that should be enclosed by the 
 *    `<div class="definitions-container"> ... </div>`?
 *    --> I'm assuming not. But if not, then some pattern needs to
 *        be identified to know where the 'definitions-container'
 *        should end.
 * 3. Are we gaurenteed to reach the end of the html snippit in
 *    the given csv to mark the spot to close the 
 *    `<div class="passage-container">` ?
***************************************************************/

Points to Hit on:
1. Will all "example" <p><strong> combinations have the <em> tags?
// 2a. Should `class = "vocab definition"` or `class = "vocab-definition"` ?
// 2b. should `class = "vocab example"` or `class = "vocab-example"` ?
3. Do you want the <h1>Instructions</h1> and <h2>Warm-up</h2> elements 
   deleted, or just the content between them?
   --> Should the <p> tags between <h2>Warm-up</h2> and <p><strong> be deleted?
4. How to know where to start and stop the added div containers? i.e. 
   definitions-container and passage-container.
   --> None of the example CSVs have an <h2>Definitions</h2> tag.
   --> 



UNUSED CODE THAT MAY WANT TO BE REFERRED TO LATER::
// Goes instead of replace Text
// curr.passagetext = curr.passagetext.replace(/<h1>Instructions<\/h1>[\S\s]*?(<h2>[\s\S]*?Warm-up[\s\S]*?<\/h2>)/i, '<h2>Definitions</h2><h2>Warm-up</h2>');
// curr.passagetext = curr.passagetext.replace(/<h2>Warm-up<\/h2>[\S\s]*?(<p><strong>|<h2>Passage<\/h2>)/i, /$1/);

// Longer Version of current replaceText function
// var replaceText = function (acc, curr, $) {
//     if ($('h1').first().text().toLowerCase() === 'instructions') {
//         if ($('h2').first().text().toLowerCase() === 'warm-up') {
//             // Remove everything between h1 instructions and h2 warm-up
//             $('h1').first().nextUntil('h2').remove('*');
//         }
//         // Remove instructions h1 tag
//         $('h1').first().remove('*');
//     }
//     if ($('h2').first().text().toLowerCase() === 'warm-up'){
//         // replaced warm-up with definitions
//         $('h2').first().after('<h2>Definitions</h2>'); // add definitions h2 tag after warm-up h2 tag
//         $('h2').first().remove(); // remove warm-up h2 tag
//         if ($('h2').first().text().toLowerCase() === 'definitions') {
//             // console.log($('h2').first().nextUntil('h2').not($('p').has('strong')).length);
//             $('h2').first().nextUntil('h2').not($('p').has('strong')).remove();
//         }
//     }
// };

// Used at fixCheerio if {xmlMode: false}
// if (curr.passagetext.includes('<html>')){curr.passagetext = curr.passagetext.replace(/<html>/g, '');}
// if (curr.passagetext.includes('</html>')){curr.passagetext = curr.passagetext.replace(/<\/html>/g, '');}
// if (curr.passagetext.includes('<head>')){curr.passagetext = curr.passagetext.replace(/<head>/g, '');}
// if (curr.passagetext.includes('</head>')){curr.passagetext = curr.passagetext.replace(/<\/head>/g, '');}
// if (curr.passagetext.includes('<body>')){curr.passagetext = curr.passagetext.replace(/<body>/g, '');}
// if (curr.passagetext.includes('</body>')){curr.passagetext = curr.passagetext.replace(/<\/body>/g, '');}